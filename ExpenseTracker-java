import java.io.*;
import java.util.*;
public class ExpenseTracker {
    private static Map<String, List<Double>> expenses = new HashMap<>();
    private static final String DATA_FILE = "expenses.txt";
    public static void main(String[] args) {
        loadExpenses();
        Scanner scanner = new Scanner(System.in);
        boolean continueTracking = true;
        while (continueTracking) {
            System.out.println("Personal Expense Tracker");
            System.out.println("1. Add Expense");
            System.out.println("2. View Expenses");
            System.out.println("3. Delete Expense");
            System.out.println("4. Expense Summary");
            System.out.println("5. Exit");
            System.out.print("Choose an option: ");
            int option = scanner.nextInt();

            switch (option) {
                case 1:
                    addExpense(scanner);
                    break;
                case 2:
                    viewExpenses();
                    break;
                case 3:
                    deleteExpense(scanner);
                    break;
                case 4:
                    displaySummary();
                    break;
                case 5:
                    continueTracking = false;
                    System.out.println("Exiting...");
                    break;
                default:
                    System.out.println("Invalid option. Please choose a valid option.");
            }
        }

        saveExpenses();
    }
    private static void addExpense(Scanner scanner) {
        System.out.print("Enter category: ");
        String category = scanner.next();
        System.out.print("Enter amount: ");
        double amount = scanner.nextDouble();

        if (!expenses.containsKey(category)) {
            expenses.put(category, new ArrayList<>());
        }
        expenses.get(category).add(amount);
        System.out.println("Expense added successfully.");
    }
    private static void viewExpenses() {
        for (Map.Entry<String, List<Double>> entry : expenses.entrySet()) {
            System.out.println("Category: " + entry.getKey());
            for (double amount : entry.getValue()) {
                System.out.println("  - " + amount);
            }
        }
    }
    private static void deleteExpense(Scanner scanner) {
        System.out.print("Enter category: ");
        String category = scanner.next();
        System.out.print("Enter amount: ");
        double amount = scanner.nextDouble();

        if (expenses.containsKey(category)) {
            List<Double> amounts = expenses.get(category);
            if (amounts.remove(amount)) {
                System.out.println("Expense deleted successfully.");
            } else {
                System.out.println("Expense not found.");
            }
        } else {
            System.out.println("Category not found.");
        }
    }
    private static void displaySummary() {
        double totalSpent = 0;
        for (List<Double> amounts : expenses.values()) {
            for (double amount : amounts) {
                totalSpent += amount;
            }
        }
        System.out.println("Expense Summary:");
        for (Map.Entry<String, List<Double>> entry : expenses.entrySet()) {
            double categoryTotal = 0;
            for (double amount : entry.getValue()) {
                categoryTotal += amount;
            }
            System.out.println("  - " + entry.getKey() + ": " + categoryTotal);
        }
        System.out.println("Total Spent: " + totalSpent);
    }
    private static void loadExpenses() {
        try (BufferedReader reader = new BufferedReader(new FileReader(DATA_FILE))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(",");
                String category = parts[0];
                double amount = Double.parseDouble(parts[1]);
                if (!expenses.containsKey(category)) {
                    expenses.put(category, new ArrayList<>());
                }
                expenses.get(category).add(amount);
            }
        } catch (IOException e) {
            System.out.println("Error loading expenses: " + e.getMessage());
        }
    }
    private static void saveExpenses() {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(DATA_FILE))) {
            for (Map.Entry<String, List<Double>> entry : expenses.entrySet()) {
                for (double amount : entry.getValue()) {
                    writer.write(entry.getKey() + "," + amount + "\n");
                }
            }
        } catch (IOException e) {
            System.out.println("Error saving expenses: " + e.getMessage());
        }
    }
}
